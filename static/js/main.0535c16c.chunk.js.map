{"version":3,"sources":["components/Notes.js","App.js","utils.js","index.js"],"names":["Note","className","onClick","this","props","onNoteDelete","text","Component","CreateNote","onTextChange","event","setState","target","value","onSave","onNoteCreate","state","onReset","onChange","Notes","notes","map","index","App","indexToRemove","oldState","array","slice","concat","newNoteText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAGMA,E,4JACJ,WACE,OACE,sBAAKC,UAAU,aAAf,UACE,sBAAMA,UAAU,oBAAoBC,QAASC,KAAKC,MAAMC,aAAxD,eAGCF,KAAKC,MAAME,Y,GAPDC,aAabC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IAMRK,aAAe,SAACC,GACd,EAAKC,SAAS,CACZL,KAAMI,EAAME,OAAOC,SATJ,EAanBC,OAAS,WACP,EAAKV,MAAMW,aAAa,EAAKC,MAAMV,MACnC,EAAKW,WAfY,EAkBnBA,QAAU,WACR,EAAKN,SAAS,CACZL,KAAM,MAlBR,EAAKU,MAAQ,CACXV,KAAM,IAHS,E,0CAwBnB,WACE,OACE,sBAAKL,UAAU,0BAAf,UACE,0BACEA,UAAU,qBACVY,MAAOV,KAAKa,MAAMV,KAClBY,SAAUf,KAAKM,eAGjB,sBAAKR,UAAU,uBAAf,UACE,wBAAQA,UAAU,sBAAsBC,QAASC,KAAKW,OAAtD,wBAGA,wBACEb,UAAU,gDACVC,QAASC,KAAKc,QAFhB,6B,GAtCeV,aAkDnBY,E,4JACJ,WAAU,IAAD,OACP,OACE,sBAAKlB,UAAU,QAAf,UACE,cAAC,EAAD,CAAYc,aAAcZ,KAAKC,MAAMW,eACrC,uBACCZ,KAAKC,MAAMgB,MAAMC,KAAI,SAACf,EAAMgB,GAC3B,OACE,cAAC,EAAD,CACEhB,KAAMA,EAEND,aAAc,kBAAM,EAAKD,MAAMC,aAAaiB,KADvCA,a,GAVCf,aCtBLgB,E,kDAvCb,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,aAAe,SAACmB,GACd,EAAKb,UAAS,SAACc,GACb,MAAO,CACLL,OCpBqBM,EDoBDD,EAASL,MCpBDE,EDoBQE,ECnB5CE,EAAMC,MAAM,EAAGL,GAAOM,OAAOF,EAAMC,MAAML,EAAO,MADpB,IAACI,EAAOJ,MDKf,EAoBnBP,aAAe,SAACc,GACd,EAAKlB,UAAS,SAACc,GACb,MAAO,CACLL,MAAO,CAACS,GAAaD,OAAOH,EAASL,YArBzC,EAAKJ,MAAQ,CACXI,MAAO,CACL,4BACA,iCACA,sCACA,uDAPa,E,0CA4BnB,WACE,OACE,cAAC,EAAD,CACEA,MAAOjB,KAAKa,MAAMI,MAClBf,aAAcF,KAAKE,aACnBU,aAAcZ,KAAKY,mB,GAlCTR,aEElBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0535c16c.chunk.js","sourcesContent":["import { React, Component } from \"react\";\r\nimport \"./Note.css\";\r\n\r\nclass Note extends Component {\r\n  render() {\r\n    return (\r\n      <div className='Notes-Note'>\r\n        <span className='Notes-Note-Delete' onClick={this.props.onNoteDelete}>\r\n          x\r\n        </span>\r\n        {this.props.text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CreateNote extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: \"\",\r\n    };\r\n  }\r\n\r\n  onTextChange = (event) => {\r\n    this.setState({\r\n      text: event.target.value,\r\n    });\r\n  };\r\n\r\n  onSave = () => {\r\n    this.props.onNoteCreate(this.state.text);\r\n    this.onReset();\r\n  };\r\n\r\n  onReset = () => {\r\n    this.setState({\r\n      text: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='Notes-Create Notes-Note'>\r\n        <textarea\r\n          className='Notes-Create-input'\r\n          value={this.state.text}\r\n          onChange={this.onTextChange}\r\n        />\r\n\r\n        <div className='Notes-Create-Buttons'>\r\n          <button className='Notes-Create-Button' onClick={this.onSave}>\r\n            Save note!\r\n          </button>\r\n          <button\r\n            className='Notes-Create-Button Notes-Create-Button-reset'\r\n            onClick={this.onReset}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Notes extends Component {\r\n  render() {\r\n    return (\r\n      <div className='Notes'>\r\n        <CreateNote onNoteCreate={this.props.onNoteCreate} />\r\n        <br />\r\n        {this.props.notes.map((text, index) => {\r\n          return (\r\n            <Note\r\n              text={text}\r\n              key={index}\r\n              onNoteDelete={() => this.props.onNoteDelete(index)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Notes };\r\n","import React, { Component } from \"react\";\nimport { Notes } from \"./components/Notes\";\nimport { withoutIndex } from \"./utils\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [\n        \"**Buy**: tea, coffe, milk\",\n        \"**ToDo**: do, todo, tododotodo\",\n        \"**Need**: sleep, go shoping, throw \",\n        \"**Remember**: go to Wien, ask Agent about exursion\",\n      ],\n    };\n  }\n\n  onNoteDelete = (indexToRemove) => {\n    this.setState((oldState) => {\n      return {\n        notes: withoutIndex(oldState.notes, indexToRemove),\n      };\n    });\n  };\n\n  onNoteCreate = (newNoteText) => {\n    this.setState((oldState) => {\n      return {\n        notes: [newNoteText].concat(oldState.notes),\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Notes\n        notes={this.state.notes}\n        onNoteDelete={this.onNoteDelete}\n        onNoteCreate={this.onNoteCreate}\n      />\n    );\n  }\n}\n\nexport default App;\n","export const withoutIndex = (array, index) =>\r\narray.slice(0, index).concat(array.slice(index +1));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}